package utils

import (
	"io/ioutil"

	. "cve-sa-backend/iniconf"

	"github.com/huaweicloud/huaweicloud-sdk-go-obs/obs"
)

func initObs() (client *obs.ObsClient, err error) {
	client, err = obs.New(Obs.AK, Obs.SK, Obs.Point, obs.WithSocketTimeout(60000), obs.WithConnectTimeout(60000))
	if err != nil {
		return nil, err
	}

	return
}

func DownloadFile(key string) (all []byte, _ error) {
	var object *obs.GetObjectOutput
	input := obs.GetObjectInput{
		GetObjectMetadataInput: obs.GetObjectMetadataInput{Bucket: Obs.Bucket, Key: key},
	}
	client, err := initObs()
	if err != nil {
		return nil, err
	}

	object, err = client.GetObject(&input)
	if err != nil {
		return nil, err
	}
	defer object.Body.Close()

	all, err = ioutil.ReadAll(object.Body)
	if err != nil {
		return nil, err
	}

	return all, nil
}

func UploadFile(key, filepath string) error {
	client, err := initObs()
	if err != nil {
		return err
	}
	input := &obs.PutFileInput{}
	input.Bucket = Obs.Bucket
	input.Key = key
	input.SourceFile = filepath
	_, err = client.PutFile(input)
	return err
}
