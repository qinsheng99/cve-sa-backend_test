package handles

import (
	"bytes"
	"mime/multipart"
	"net/http"

	"cve-sa-backend/iniconf"

	"github.com/robfig/cron/v3"
)

func Task(c *cron.Cron) (err error) {
	_, err = c.AddFunc("0 0 0 * * *", requestOsv)
	return
}

func requestOsv() {
	iniconf.SLog.Info("start osv")
	url := "https://cvesa.test.osinfra.cn/cve-security-notice-server/syncOsv"
	//url := "https://www.openeuler.org/api-cve/cve-security-notice-server/syncOsv"
	var buf = new(bytes.Buffer)
	form := multipart.NewWriter(buf)
	_ = form.WriteField("username", iniconf.Upload.Username)
	_ = form.WriteField("password", iniconf.Upload.Password)
	_ = form.Close()

	post, err := http.Post(url, form.FormDataContentType(), buf)
	if err != nil {
		iniconf.SLog.Error(err.Error())
		return
	}

	if post.StatusCode != http.StatusOK {
		iniconf.SLog.Errorf("request osv status: %d, msg: %s", post.StatusCode, post.Status)
		return
	}
	iniconf.SLog.Info("end osv")
}
